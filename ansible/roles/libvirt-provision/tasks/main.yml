---
# tasks file for libvirt-provision

- name: Copy the base image disk
  copy:
    src: "{{ libvirt_images_folder }}/{{ libvirt_base_image }}"
    dest: "{{ libvirt_images_folder }}/{{ item.1.name }}{{ libvirt_base_image | splitext[1] }}"
  with_indexed_items: "{{ libvirt_vms }}"

- name: Define VMs
  virt:
    name: "{{ item.1.name }}"
    command: define
    xml: "{{ lookup('template', 'libvirt-vm-template.xml.j2') }}"
  with_indexed_items: "{{ libvirt_vms }}"

- name: Start vm
  virt:
    state: running
    name: "{{ item.1.name }}"
  with_indexed_items: "{{ libvirt_vms }}"

################################################################################
### DNS Configuration
################################################################################

- name: Add a DHCP entry for new VMs
  lineinfile:
    state: present
    create: yes
    path: /etc/dhcp/vm-ansible.conf
    insertafter: EOF
    line: "host {{ item.1.name }} { hardware ethernet {{ libvirt_mac_prefix ~ ('%02x' % (item.0 + libvirt_mac_offset)) }}; fixed-address {{ libvirt_ip_prefix ~ (item.0 + libvirt_ip_offset) }}; }"
    owner: root
    group: root
    mode: '0644'
  register: __libvirt_dhcp_entries_updated
  with_indexed_items: "{{ libvirt_vms }}"

- name: Restart DHCP service
  service:
    state: restarted
    name: dhcpd
  when: __libvirt_dhcp_entries_updated | changed

################################################################################
### DNS Configuration
################################################################################

# In a real wold: Should be done with Ansible Vault
- name: Configure DNSs for newly created VMs
  nsupdate:
    state: present
    server: "{{ libvirt_dns_server }}"
    type: A
    ttl: 60
    zone: "{{ libvirt_dns_zone }}"
    value: "{{ libvirt_ip_prefix ~ (item.0 + libvirt_ip_offset) }}"
    record: "{{ item.1.name }}"
    key_name: "{{ lookup('pipe', 'grep key ' ~ libvirt_dns_key).split(' ')[1] | replace('\"', '') }}"
    key_secret: "{{ lookup('pipe', \"grep secret \" ~ libvirt_dns_key ~ \" | tr -d ';' \").split(' ')[1] | replace('\"', '') }}"
  with_indexed_items: "{{ libvirt_vms }}"

- name: Wait for VMs to be reachable on SSH through their DNS
  wait_for:
    state: started
    host: "{{ item.1.name }}.{{ libvirt_dns_zone }}"
    port: 22
    delay: 0
  with_indexed_items: "{{ libvirt_vms }}"