---
# tasks file for libvirt

- name: Gather the list of VM
  virt:
    command: list_vms
  register: __libvirt_current_vms

- name: Check the status of the original VM
  virt:
    command: status
    name: "{{ libvirt_origin_guest }}"
  register: __libvirt_original_vm_status

- name: Show the status of the original VM
  debug:
    msg: "VM status: {{ __libvirt_original_vm_status }}"
    verbosity: 2

- name: Make sure the orginal VM is shutdown
  virt:
    command: shutdown
    name: "{{ libvirt_origin_guest }}"
  when: __libvirt_original_vm_status.status != 'shutdown'

# Clone only if the VM has not been already cloned
- name: Clone the original VM into a new one
  command: >
    virt-clone -o {{ libvirt_origin_guest }} -n {{ item.1.name }} -f /var/lib/libvirt/images/{{ item.1.name }}.qcow2 -m {{ '52:54:00:b9:d0:' ~ ('%02x' % item.0) }}
  when: item.1.name not in __libvirt_current_vms.list_vms
  with_indexed_items: "{{ libvirt_vms }}"

- name: Check the status of each new VMs
  virt:
    command: status
    name: "{{ item.name }}"
  register: __libvirt_vms_status
  with_items: "{{ libvirt_vms }}"

- name: Show the status of each new VMs
  debug:
    msg: "VM status: {{ __libvirt_vms_status }}"
    verbosity: 2

- name: Start VMs
  virt:
    command: start
    name: "{{ item.item.name }}"
  when: item.status != 'running'
  with_items: "{{ __libvirt_vms_status.results }}"
